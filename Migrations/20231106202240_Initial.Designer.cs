// <auto-generated />
using System;
using DTC_Dental.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DTC_Dental.Migrations
{
    [DbContext(typeof(DentistContext))]
    [Migration("20231106202240_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DTC_Dental.Models.Appointment", b =>
                {
                    b.Property<int>("AppointmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentID"));

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DentistID")
                        .HasColumnType("int");

                    b.Property<int>("PatientID")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("TypeID")
                        .HasColumnType("int");

                    b.HasKey("AppointmentID");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            AppointmentID = 1,
                            AppointmentDate = new DateTime(2000, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DentistID = 1,
                            PatientID = 1,
                            StartTime = new TimeSpan(0, 11, 0, 0, 0),
                            TypeID = 1
                        },
                        new
                        {
                            AppointmentID = 2,
                            AppointmentDate = new DateTime(2000, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DentistID = 2,
                            PatientID = 2,
                            StartTime = new TimeSpan(0, 12, 0, 0, 0),
                            TypeID = 2
                        },
                        new
                        {
                            AppointmentID = 3,
                            AppointmentDate = new DateTime(2000, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DentistID = 3,
                            PatientID = 3,
                            StartTime = new TimeSpan(0, 1, 0, 0, 0),
                            TypeID = 3
                        },
                        new
                        {
                            AppointmentID = 4,
                            AppointmentDate = new DateTime(2000, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DentistID = 4,
                            PatientID = 4,
                            StartTime = new TimeSpan(0, 2, 0, 0, 0),
                            TypeID = 4
                        },
                        new
                        {
                            AppointmentID = 5,
                            AppointmentDate = new DateTime(2000, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DentistID = 5,
                            PatientID = 5,
                            StartTime = new TimeSpan(0, 2, 20, 0, 0),
                            TypeID = 5
                        },
                        new
                        {
                            AppointmentID = 6,
                            AppointmentDate = new DateTime(2000, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DentistID = 1,
                            PatientID = 6,
                            StartTime = new TimeSpan(0, 2, 15, 0, 0),
                            TypeID = 6
                        },
                        new
                        {
                            AppointmentID = 7,
                            AppointmentDate = new DateTime(2000, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DentistID = 2,
                            PatientID = 7,
                            StartTime = new TimeSpan(0, 1, 12, 0, 0),
                            TypeID = 7
                        },
                        new
                        {
                            AppointmentID = 8,
                            AppointmentDate = new DateTime(2000, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DentistID = 3,
                            PatientID = 8,
                            StartTime = new TimeSpan(0, 2, 55, 0, 0),
                            TypeID = 8
                        },
                        new
                        {
                            AppointmentID = 9,
                            AppointmentDate = new DateTime(2000, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DentistID = 4,
                            PatientID = 9,
                            StartTime = new TimeSpan(0, 3, 0, 0, 0),
                            TypeID = 9
                        },
                        new
                        {
                            AppointmentID = 10,
                            AppointmentDate = new DateTime(2000, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DentistID = 5,
                            PatientID = 10,
                            StartTime = new TimeSpan(0, 11, 30, 0, 0),
                            TypeID = 10
                        });
                });

            modelBuilder.Entity("DTC_Dental.Models.AppointmentType", b =>
                {
                    b.Property<int>("TypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeID"));

                    b.Property<string>("AppointmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.HasKey("TypeID");

                    b.ToTable("AppointmentTypes");

                    b.HasData(
                        new
                        {
                            TypeID = 1,
                            AppointmentName = "Cosmetic Consultation - Adult",
                            Description = "Initial consultation with adult patient to discuss cosmetic dentistry options",
                            Duration = 30
                        },
                        new
                        {
                            TypeID = 2,
                            AppointmentName = "Cosmetic Consultation - Child",
                            Description = "Initial consultation with child patient to discuss cosmetic dentistry options",
                            Duration = 30
                        },
                        new
                        {
                            TypeID = 3,
                            AppointmentName = "Cosmetic Consultation - Teen",
                            Description = "Initial consultation with teem patient to discuss cosmetic dentistry options",
                            Duration = 30
                        },
                        new
                        {
                            TypeID = 4,
                            AppointmentName = " Cosmetic Procedure - Adult",
                            Description = "Cosmetic dentistry procedure for adult patient",
                            Duration = 120
                        },
                        new
                        {
                            TypeID = 5,
                            AppointmentName = "Cosmetic Procedure - Child",
                            Description = "Cosmetic dentistry procedure for child patient",
                            Duration = 120
                        },
                        new
                        {
                            TypeID = 6,
                            AppointmentName = "Cosmetic Procedure - Teen",
                            Description = "Cosmetic dentistry procedure for teen patient",
                            Duration = 120
                        },
                        new
                        {
                            TypeID = 7,
                            AppointmentName = "Endodontic Procedure - Adult",
                            Description = "Painless root canal therapy for adults",
                            Duration = 90
                        },
                        new
                        {
                            TypeID = 8,
                            AppointmentName = " Endodontic Procedure - Child",
                            Description = "Painless root canal therapy for Children",
                            Duration = 90
                        },
                        new
                        {
                            TypeID = 9,
                            AppointmentName = "Endodontic Procedure - Teen ",
                            Description = "Painless root canal therapy for Teens",
                            Duration = 90
                        },
                        new
                        {
                            TypeID = 10,
                            AppointmentName = "New Patient - Adult",
                            Description = "Meet new patient with general dental check-up including x-rays and teeth cleaning",
                            Duration = 30
                        },
                        new
                        {
                            TypeID = 11,
                            AppointmentName = "New Patient - Child",
                            Description = "Meet new patient with general dental check-up including x-rays and teeth cleaning",
                            Duration = 30
                        },
                        new
                        {
                            TypeID = 12,
                            AppointmentName = "New Patient - Teen",
                            Description = "Meet new patient with general dental check-up including x-rays and teeth cleaning",
                            Duration = 30
                        },
                        new
                        {
                            TypeID = 13,
                            AppointmentName = "Periodontal Treatment - Adult ",
                            Description = "Treatment (both preventative or restorative) for gum diseases",
                            Duration = 60
                        },
                        new
                        {
                            TypeID = 14,
                            AppointmentName = "Periodontal Treatment - Child",
                            Description = "Treatment (both preventative or restorative) for gum diseases",
                            Duration = 60
                        },
                        new
                        {
                            TypeID = 15,
                            AppointmentName = "Periodontal Treatment - Teen ",
                            Description = "Treatment (both preventative or restorative) for gum diseases",
                            Duration = 60
                        },
                        new
                        {
                            TypeID = 16,
                            AppointmentName = "Preventative Care - Adult",
                            Description = "General preventative care for an adult patient.The appointment will include x-rays\\54 teeth cleaning\\54 and general oral hygiene advising",
                            Duration = 60
                        },
                        new
                        {
                            TypeID = 17,
                            AppointmentName = "Preventative Care - Child",
                            Description = "General preventative care for an adult patient.The appointment will include x-rays\\54 teeth cleaning\\54 and general oral hygiene advising",
                            Duration = 60
                        },
                        new
                        {
                            TypeID = 18,
                            AppointmentName = "Preventative Care - Teen",
                            Description = "General preventative care for an adult patient. The appointment will include x - rays\\54 teeth cleaning\\54 and general oral hygiene advising",
                            Duration = 60
                        },
                        new
                        {
                            TypeID = 19,
                            AppointmentName = "Prosthodontic Care - Adult",
                            Description = "Restoration and/or replacement of missing or damaged teeth for adults",
                            Duration = 60
                        },
                        new
                        {
                            TypeID = 20,
                            AppointmentName = "Prosthodontic Care - Child",
                            Description = "Restoration and/or replacement of missing or damaged teeth for adults",
                            Duration = 60
                        },
                        new
                        {
                            TypeID = 21,
                            AppointmentName = "Prosthodontic Care - Teen",
                            Description = "Restoration and/or replacement of missing or damaged teeth for adults",
                            Duration = 60
                        });
                });

            modelBuilder.Entity("DTC_Dental.Models.CompletedService", b =>
                {
                    b.Property<int>("ServiceID")
                        .HasColumnType("int");

                    b.Property<int>("VisitID")
                        .HasColumnType("int");

                    b.HasKey("ServiceID", "VisitID");

                    b.ToTable("CompletedServices");

                    b.HasData(
                        new
                        {
                            ServiceID = 1,
                            VisitID = 1
                        },
                        new
                        {
                            ServiceID = 2,
                            VisitID = 2
                        },
                        new
                        {
                            ServiceID = 3,
                            VisitID = 3
                        },
                        new
                        {
                            ServiceID = 4,
                            VisitID = 4
                        },
                        new
                        {
                            ServiceID = 5,
                            VisitID = 5
                        },
                        new
                        {
                            ServiceID = 6,
                            VisitID = 6
                        },
                        new
                        {
                            ServiceID = 7,
                            VisitID = 7
                        },
                        new
                        {
                            ServiceID = 8,
                            VisitID = 8
                        },
                        new
                        {
                            ServiceID = 9,
                            VisitID = 9
                        },
                        new
                        {
                            ServiceID = 10,
                            VisitID = 10
                        });
                });

            modelBuilder.Entity("DTC_Dental.Models.Dentist", b =>
                {
                    b.Property<int>("DentistID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DentistID"));

                    b.Property<string>("DentistFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DentistLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DentistID");

                    b.ToTable("Dentists");

                    b.HasData(
                        new
                        {
                            DentistID = 1,
                            DentistFirstName = "Jan",
                            DentistLastName = "Run",
                            HireDate = new DateTime(2000, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DentistID = 2,
                            DentistFirstName = "Ron",
                            DentistLastName = "Jun",
                            HireDate = new DateTime(2000, 11, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DentistID = 3,
                            DentistFirstName = "Jason",
                            DentistLastName = "Fun",
                            HireDate = new DateTime(2000, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DentistID = 4,
                            DentistFirstName = "Jammy",
                            DentistLastName = "Dillan",
                            HireDate = new DateTime(2000, 9, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DentistID = 5,
                            DentistFirstName = "Jonh",
                            DentistLastName = "Ronal",
                            HireDate = new DateTime(2000, 8, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("DTC_Dental.Models.Patient", b =>
                {
                    b.Property<int>("PatientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientID"));

                    b.Property<string>("PatientCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PatientDOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("PatientEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientHOHID")
                        .HasColumnType("int");

                    b.Property<string>("PatientLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PatientMinor")
                        .HasColumnType("bit");

                    b.Property<string>("PatientPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientSSN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientStreetAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientZip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientID");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            PatientID = 1,
                            PatientCity = "Austin",
                            PatientDOB = new DateTime(2000, 1, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientEmail = "Rohan@Gmail.com",
                            PatientFirstName = "Rohan",
                            PatientHOHID = 0,
                            PatientLastName = "Govathoti",
                            PatientMinor = false,
                            PatientPhone = "5127787879",
                            PatientSSN = "123456789",
                            PatientState = "TX",
                            PatientStreetAddress = "101 Chillip",
                            PatientZip = "78753"
                        },
                        new
                        {
                            PatientID = 2,
                            PatientCity = "Austin",
                            PatientDOB = new DateTime(2000, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientEmail = "Joseph@Gmail.com",
                            PatientFirstName = "Joseph",
                            PatientHOHID = 0,
                            PatientLastName = "Pham",
                            PatientMinor = false,
                            PatientPhone = "5127787394",
                            PatientSSN = "133456789",
                            PatientState = "TX",
                            PatientStreetAddress = "102 Chillip",
                            PatientZip = "78753"
                        },
                        new
                        {
                            PatientID = 3,
                            PatientCity = "Austin",
                            PatientDOB = new DateTime(2000, 3, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientEmail = "Hanson@Gmail.com",
                            PatientFirstName = "Hanson",
                            PatientHOHID = 0,
                            PatientLastName = "Nguyen",
                            PatientMinor = false,
                            PatientPhone = "5122228493",
                            PatientSSN = "143456789",
                            PatientState = "TX",
                            PatientStreetAddress = "103 Chillip",
                            PatientZip = "78753"
                        },
                        new
                        {
                            PatientID = 4,
                            PatientCity = "Austin",
                            PatientDOB = new DateTime(2000, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientEmail = "Jason@Gmail.com",
                            PatientFirstName = "Jason",
                            PatientHOHID = 0,
                            PatientLastName = "Nguyen",
                            PatientMinor = false,
                            PatientPhone = "5127784905",
                            PatientSSN = "125456789",
                            PatientState = "TX",
                            PatientStreetAddress = "104 Chillip",
                            PatientZip = "78753"
                        },
                        new
                        {
                            PatientID = 5,
                            PatientCity = "Austin",
                            PatientDOB = new DateTime(2000, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientEmail = "Zahra@Gmail.com",
                            PatientFirstName = "Zahra",
                            PatientHOHID = 0,
                            PatientLastName = "Karim",
                            PatientMinor = false,
                            PatientPhone = "5128878473",
                            PatientSSN = "123466789",
                            PatientState = "TX",
                            PatientStreetAddress = "105 Chillip",
                            PatientZip = "78753"
                        },
                        new
                        {
                            PatientID = 6,
                            PatientCity = "Austin",
                            PatientDOB = new DateTime(2000, 6, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientEmail = "Miley@Gmail.com",
                            PatientFirstName = "Miley",
                            PatientHOHID = 0,
                            PatientLastName = "Cyrus",
                            PatientMinor = false,
                            PatientPhone = "5127787473",
                            PatientSSN = "123457789",
                            PatientState = "TX",
                            PatientStreetAddress = "106 Chillip",
                            PatientZip = "78753"
                        },
                        new
                        {
                            PatientID = 7,
                            PatientCity = "Austin",
                            PatientDOB = new DateTime(2000, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientEmail = "Donal@Gmail.com",
                            PatientFirstName = "Donal",
                            PatientHOHID = 0,
                            PatientLastName = "Duck",
                            PatientMinor = false,
                            PatientPhone = "5124445546",
                            PatientSSN = "123459789",
                            PatientState = "TX",
                            PatientStreetAddress = "107 Chillip",
                            PatientZip = "78753"
                        },
                        new
                        {
                            PatientID = 8,
                            PatientCity = "Austin",
                            PatientDOB = new DateTime(2000, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientEmail = "Kelly@Gmail.com",
                            PatientFirstName = "Kelly",
                            PatientHOHID = 0,
                            PatientLastName = "Tran",
                            PatientMinor = false,
                            PatientPhone = "5126635465",
                            PatientSSN = "123456889",
                            PatientState = "TX",
                            PatientStreetAddress = "108 Chillip",
                            PatientZip = "78753"
                        },
                        new
                        {
                            PatientID = 9,
                            PatientCity = "Austin",
                            PatientDOB = new DateTime(2000, 9, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientEmail = "Dalvin@Gmail.com",
                            PatientFirstName = "Dalvin",
                            PatientHOHID = 0,
                            PatientLastName = "Kelly",
                            PatientMinor = false,
                            PatientPhone = " 5125565686",
                            PatientSSN = "923456789",
                            PatientState = "TX",
                            PatientStreetAddress = "109 Chillip",
                            PatientZip = "78753"
                        },
                        new
                        {
                            PatientID = 10,
                            PatientCity = "Austin",
                            PatientDOB = new DateTime(2000, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientEmail = "Diana@Gmail.com",
                            PatientFirstName = "Diana",
                            PatientHOHID = 0,
                            PatientLastName = "Gutiz",
                            PatientMinor = false,
                            PatientPhone = "5126676748",
                            PatientSSN = "103456789",
                            PatientState = "TX",
                            PatientStreetAddress = "1231 Chillip",
                            PatientZip = "78753"
                        },
                        new
                        {
                            PatientID = 11,
                            PatientCity = "Austin",
                            PatientDOB = new DateTime(2000, 11, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientEmail = "Josh@Gmail.com",
                            PatientFirstName = "Josh",
                            PatientHOHID = 0,
                            PatientLastName = "Drake",
                            PatientMinor = false,
                            PatientPhone = "5126676543",
                            PatientSSN = "113456789",
                            PatientState = "TX",
                            PatientStreetAddress = "10231 Chillip",
                            PatientZip = " 78753"
                        },
                        new
                        {
                            PatientID = 12,
                            PatientCity = "Austin",
                            PatientDOB = new DateTime(2000, 12, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientEmail = "Drake@Gmail.com",
                            PatientFirstName = "Drake",
                            PatientHOHID = 0,
                            PatientLastName = "Josh",
                            PatientMinor = false,
                            PatientPhone = " 5127736489",
                            PatientSSN = "198456789",
                            PatientState = "TX",
                            PatientStreetAddress = "241 Chillip",
                            PatientZip = "8753"
                        },
                        new
                        {
                            PatientID = 13,
                            PatientCity = "Austin",
                            PatientDOB = new DateTime(2000, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientEmail = "Esther@Gmail.com",
                            PatientFirstName = "Ester",
                            PatientHOHID = 0,
                            PatientLastName = "Lovato",
                            PatientMinor = false,
                            PatientPhone = "5178673645",
                            PatientSSN = "123456789",
                            PatientState = "TX",
                            PatientStreetAddress = "141 Chillip",
                            PatientZip = "78753"
                        },
                        new
                        {
                            PatientID = 14,
                            PatientCity = "Austin",
                            PatientDOB = new DateTime(2000, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientEmail = "Daffy@Gmail.com",
                            PatientFirstName = "Daffy",
                            PatientHOHID = 0,
                            PatientLastName = "Duck",
                            PatientMinor = false,
                            PatientPhone = "5126954367",
                            PatientSSN = "123456789",
                            PatientState = "TX",
                            PatientStreetAddress = "1271 Chillip",
                            PatientZip = "78753"
                        },
                        new
                        {
                            PatientID = 15,
                            PatientCity = "Austin",
                            PatientDOB = new DateTime(2000, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientEmail = "Dan@Gmail.com",
                            PatientFirstName = "Dan",
                            PatientHOHID = 0,
                            PatientLastName = "Run",
                            PatientMinor = false,
                            PatientPhone = "3924454397",
                            PatientSSN = "123456789",
                            PatientState = "TX",
                            PatientStreetAddress = "1261 Chillip",
                            PatientZip = "78753"
                        });
                });

            modelBuilder.Entity("DTC_Dental.Models.Service", b =>
                {
                    b.Property<int>("ServiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceID"));

                    b.Property<float>("ServiceCost")
                        .HasColumnType("real");

                    b.Property<string>("ServiceDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ServiceID");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            ServiceID = 1,
                            ServiceCost = 250f,
                            ServiceDescription = "X-Ray"
                        },
                        new
                        {
                            ServiceID = 2,
                            ServiceCost = 350f,
                            ServiceDescription = "Drill Cavity"
                        },
                        new
                        {
                            ServiceID = 3,
                            ServiceCost = 750f,
                            ServiceDescription = "Crown"
                        },
                        new
                        {
                            ServiceID = 4,
                            ServiceCost = 500f,
                            ServiceDescription = "Extract Tooth"
                        },
                        new
                        {
                            ServiceID = 5,
                            ServiceCost = 1500f,
                            ServiceDescription = "Root Canal"
                        },
                        new
                        {
                            ServiceID = 6,
                            ServiceCost = 350f,
                            ServiceDescription = "Tooth Whitening"
                        },
                        new
                        {
                            ServiceID = 7,
                            ServiceCost = 2500f,
                            ServiceDescription = "Dental Implant"
                        },
                        new
                        {
                            ServiceID = 8,
                            ServiceCost = 4500f,
                            ServiceDescription = "Dentures"
                        },
                        new
                        {
                            ServiceID = 9,
                            ServiceCost = 250f,
                            ServiceDescription = "Anesthetic"
                        },
                        new
                        {
                            ServiceID = 10,
                            ServiceCost = 150f,
                            ServiceDescription = "Cleaning"
                        },
                        new
                        {
                            ServiceID = 11,
                            ServiceCost = 350f,
                            ServiceDescription = "Pediatric Dental Care"
                        },
                        new
                        {
                            ServiceID = 12,
                            ServiceCost = 500f,
                            ServiceDescription = "Dental Extraction"
                        },
                        new
                        {
                            ServiceID = 13,
                            ServiceCost = 250f,
                            ServiceDescription = "Dental Screening"
                        },
                        new
                        {
                            ServiceID = 14,
                            ServiceCost = 275f,
                            ServiceDescription = "Fluoride Treatment"
                        },
                        new
                        {
                            ServiceID = 15,
                            ServiceCost = 250f,
                            ServiceDescription = "Cavity Filling"
                        });
                });

            modelBuilder.Entity("DTC_Dental.Models.Visit", b =>
                {
                    b.Property<int>("VisitID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitID"));

                    b.Property<int>("DentistID")
                        .HasColumnType("int");

                    b.Property<int>("PatientID")
                        .HasColumnType("int");

                    b.Property<DateTime>("VisitDate")
                        .HasColumnType("datetime2");

                    b.HasKey("VisitID");

                    b.ToTable("Visits");

                    b.HasData(
                        new
                        {
                            VisitID = 1,
                            DentistID = 1,
                            PatientID = 1,
                            VisitDate = new DateTime(2000, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            VisitID = 2,
                            DentistID = 2,
                            PatientID = 2,
                            VisitDate = new DateTime(2000, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            VisitID = 3,
                            DentistID = 3,
                            PatientID = 3,
                            VisitDate = new DateTime(2000, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            VisitID = 4,
                            DentistID = 4,
                            PatientID = 4,
                            VisitDate = new DateTime(2000, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            VisitID = 5,
                            DentistID = 5,
                            PatientID = 5,
                            VisitDate = new DateTime(2000, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            VisitID = 6,
                            DentistID = 1,
                            PatientID = 6,
                            VisitDate = new DateTime(2000, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            VisitID = 7,
                            DentistID = 2,
                            PatientID = 7,
                            VisitDate = new DateTime(2000, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            VisitID = 8,
                            DentistID = 3,
                            PatientID = 8,
                            VisitDate = new DateTime(2000, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            VisitID = 9,
                            DentistID = 4,
                            PatientID = 9,
                            VisitDate = new DateTime(2000, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            VisitID = 10,
                            DentistID = 5,
                            PatientID = 10,
                            VisitDate = new DateTime(2000, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
